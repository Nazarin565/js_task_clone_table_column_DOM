{"mappings":"ACcA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAE/B,EAAY,EAAM,aAAa,CAAC,YAChC,EAAW,EAAM,gBAAgB,CAAC,YAClC,EAAY,EAAM,aAAa,CAAC,YAEhC,EAAiB,EAAU,gBAAgB,CAAC,MAC5C,EAAmB,EAAe,IAAI,CAAC,GAAG,SAAS,CAAC,CAAA,GAE1D,EAAU,YAAY,CACpB,EACA,CAAc,CAAC,EAAe,MAAM,CAAG,EAAE,EAG3C,EAAS,OAAO,CAAC,SAAC,CAAlB,EACE,IAAM,EAAU,EAAI,gBAAgB,CAAC,MAC/B,EAAiB,EAAQ,IAAI,CAAC,GAAG,SAAS,CAAC,CAAA,GAEjD,EAAI,YAAY,CAAC,EAAgB,CAAO,CAAC,EAAQ,MAAM,CAAG,EAAE,CAC9D,GAEA,IAAM,EAAiB,EAAU,gBAAgB,CAAC,MAC5C,EAAmB,EAAe,IAAI,CAAC,GAAG,SAAS,CAAC,CAAA,GAE1D,EAAU,YAAY,CACpB,EACA,CAAc,CAAC,EAAe,MAAM,CAAG,EAAE","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// const thead = document.getElementsByTagName('thead').item(0);\n// const tds = document.getElementsByTagName('td');\n// const secondCellInHead = thead.querySelectorAll('th').item(1);\n// const seconsdsCellsinBody = [];\n// for (let i = 1; i < tds.length; i += 5) {\n//   seconsdsCellsinBody.push(tds.item(i));\n// }\n// seconsdsCellsinTBody.forEach((cell) => console.log(cell.innerText));\nvar table = document.querySelector(\"table\");\nvar rowHeader = table.querySelector(\"thead tr\");\nvar rowsBody = table.querySelectorAll(\"tbody tr\");\nvar rowFooter = table.querySelector(\"tfoot tr\");\nvar rowHeaderCells = rowHeader.querySelectorAll(\"th\");\nvar headerSecondCell = rowHeaderCells.item(1).cloneNode(true);\nrowHeader.insertBefore(headerSecondCell, rowHeaderCells[rowHeaderCells.length - 1]);\nrowsBody.forEach(function(row) {\n    var rowBody = row.querySelectorAll(\"td\");\n    var bodySecondCell = rowBody.item(1).cloneNode(true);\n    row.insertBefore(bodySecondCell, rowBody[rowBody.length - 1]);\n});\nvar rowFooterCells = rowFooter.querySelectorAll(\"th\");\nvar footerSecondCell = rowFooterCells.item(1).cloneNode(true);\nrowFooter.insertBefore(footerSecondCell, rowFooterCells[rowFooterCells.length - 1]);\n\n//# sourceMappingURL=index.82ab3a6c.js.map\n","'use strict';\n\n// const thead = document.getElementsByTagName('thead').item(0);\n// const tds = document.getElementsByTagName('td');\n\n// const secondCellInHead = thead.querySelectorAll('th').item(1);\n// const seconsdsCellsinBody = [];\n\n// for (let i = 1; i < tds.length; i += 5) {\n//   seconsdsCellsinBody.push(tds.item(i));\n// }\n\n// seconsdsCellsinTBody.forEach((cell) => console.log(cell.innerText));\n\nconst table = document.querySelector('table');\n\nconst rowHeader = table.querySelector('thead tr');\nconst rowsBody = table.querySelectorAll('tbody tr');\nconst rowFooter = table.querySelector('tfoot tr');\n\nconst rowHeaderCells = rowHeader.querySelectorAll('th');\nconst headerSecondCell = rowHeaderCells.item(1).cloneNode(true);\n\nrowHeader.insertBefore(\n  headerSecondCell,\n  rowHeaderCells[rowHeaderCells.length - 1],\n);\n\nrowsBody.forEach((row) => {\n  const rowBody = row.querySelectorAll('td');\n  const bodySecondCell = rowBody.item(1).cloneNode(true);\n\n  row.insertBefore(bodySecondCell, rowBody[rowBody.length - 1]);\n});\n\nconst rowFooterCells = rowFooter.querySelectorAll('th');\nconst footerSecondCell = rowFooterCells.item(1).cloneNode(true);\n\nrowFooter.insertBefore(\n  footerSecondCell,\n  rowFooterCells[rowFooterCells.length - 1],\n);\n"],"names":["table","document","querySelector","rowHeader","rowsBody","querySelectorAll","rowFooter","rowHeaderCells","headerSecondCell","item","cloneNode","insertBefore","length","forEach","row","rowBody","bodySecondCell","rowFooterCells","footerSecondCell"],"version":3,"file":"index.82ab3a6c.js.map"}